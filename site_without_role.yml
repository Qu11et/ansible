---

- hosts: all
  become: true
  pre_tasks:

  - name: install update on Ubuntu (update repo cache)
    tags: always
    apt:
      update_cache: yes
    when: ansible_distribution == "Ubuntu"

  - name: install update on CentOS (update repo cache)
    tags: always
    yum:
      update_cache: yes
    when: ansible_distribution == "CentOS"

- hosts: all
  become: true
  tasks:

  - name: add ssh key for taile
    tags: always
    authorized_key:
      user: taile
      key: "ssh-ed25519 AAAAC3NzaC1lZDI1NTE5AAAAIHFZK2ljsxL3fkdX8RzOzPhyEEl5ii1HyBh4lKrMxlCg ansible"

- hosts: workstations
  become: true
  tasks:

  - name: install unzip
    tags: workstations
    package:
      name: unzip

  - name: install terraform
    tags: workstations
    unarchive:
      src: https://releases.hashicorp.com/terraform/1.8.2/terraform_1.8.2_linux_amd64.zip
      dest: /usr/local/bin
      remote_src: yes
      mode: 0755
      owner: root
      group: root

- hosts: web_servers_ubuntu
  become: true
  vars:
    page_title: My UBUNTU Page
    page_description: This is my UBUNTU page description.
  tasks:

  - name: install apache2 and php package on Ubuntu
    tags: ubuntu,http
    apt:
      name:
        - apache2
        - libapache2-mod-php
      state: latest
    when: ansible_distribution == "Ubuntu"

  - name: apply page template for Ubuntu server
    tags: ubuntu,http
    template:
      src: files/landing-page.html.j2
      dest: /var/www/html/index.html
    notify: restart apache

  - name: Allow all access to tcp port 80
    tags: ubuntu,http
    ufw:
      rule: allow
      port: '80'
      proto: tcp
    when: ansible_distribution == "Ubuntu"

  handlers:
  - name: restart apache
    service:
      name: apache2
      state: restarted

- hosts: web_servers_centos
  become: true
  vars:
    page_title: My CentOS Page
    page_description: This is my CentOS page description.
  tasks:

  - name: install httpd and php and firewalld package on CentOS
    tags: centos,http,firewall
    yum:
      name:
        - httpd
        - php
        - firewalld
      state: latest
    when: ansible_distribution == "CentOS"

  - name: start httpd on CentOS
    tags: centos,http
    service:
      name: httpd
      state: started
    when: ansible_distribution == "CentOS"

  - name: start and enable firewalld on CentOS
    tags: centos,http,firewall
    service:
      name: firewalld
      state: started
      enabled: yes
    when: ansible_distribution == "CentOS"

  - name: apply page template for CentOS server
    tags: centos,http,firewall
    template:
      src: files/landing-page.html.j2
      dest: /var/www/html/index.html
    notify: restart httpd

  - name: Allow all access to tcp port 80 using firewalld
    tags: centos,http.firewall
    firewalld:
      zone: public
      port: 80/tcp
      permanent: true
      state: enabled
    when: ansible_distribution == "CentOS"

  handlers:
  - name: restart httpd
    service:
      name: httpd
      state: restarted

